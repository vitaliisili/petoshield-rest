openapi: 3.0.3
info:
  title: Petoshield API
  version: 0.0.0
paths:
  /api/auth/token:
    post:
      operationId: api_auth_token_create
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/token/refresh:
    post:
      operationId: api_auth_token_refresh_create
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/help/tickets/:
    get:
      operationId: api_help_tickets_list
      description: ''
      parameters:
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ticket_status
        required: false
        in: query
        description: ticket_status
        schema:
          type: string
          enum:
          - new
          - in_process
          - closed
      - name: visitor_email
        required: false
        in: query
        description: visitor_email
        schema:
          type: string
      - name: visitor_email__icontains
        required: false
        in: query
        description: visitor_email__icontains
        schema:
          type: string
      - name: visitor_message__icontains
        required: false
        in: query
        description: visitor_message__icontains
        schema:
          type: string
      - name: visitor_name
        required: false
        in: query
        description: visitor_name
        schema:
          type: string
      - name: visitor_name__icontains
        required: false
        in: query
        description: visitor_name__icontains
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ticket'
          description: ''
    post:
      operationId: api_help_tickets_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ticket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
  /api/help/tickets/{id}/:
    get:
      operationId: api_help_tickets_retrieve
      description: ''
      parameters:
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ticket.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ticket_status
        required: false
        in: query
        description: ticket_status
        schema:
          type: string
          enum:
          - new
          - in_process
          - closed
      - name: visitor_email
        required: false
        in: query
        description: visitor_email
        schema:
          type: string
      - name: visitor_email__icontains
        required: false
        in: query
        description: visitor_email__icontains
        schema:
          type: string
      - name: visitor_message__icontains
        required: false
        in: query
        description: visitor_message__icontains
        schema:
          type: string
      - name: visitor_name
        required: false
        in: query
        description: visitor_name
        schema:
          type: string
      - name: visitor_name__icontains
        required: false
        in: query
        description: visitor_name__icontains
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    put:
      operationId: api_help_tickets_update
      description: ''
      parameters:
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ticket.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ticket_status
        required: false
        in: query
        description: ticket_status
        schema:
          type: string
          enum:
          - new
          - in_process
          - closed
      - name: visitor_email
        required: false
        in: query
        description: visitor_email
        schema:
          type: string
      - name: visitor_email__icontains
        required: false
        in: query
        description: visitor_email__icontains
        schema:
          type: string
      - name: visitor_message__icontains
        required: false
        in: query
        description: visitor_message__icontains
        schema:
          type: string
      - name: visitor_name
        required: false
        in: query
        description: visitor_name
        schema:
          type: string
      - name: visitor_name__icontains
        required: false
        in: query
        description: visitor_name__icontains
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ticket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    patch:
      operationId: api_help_tickets_partial_update
      description: ''
      parameters:
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ticket.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ticket_status
        required: false
        in: query
        description: ticket_status
        schema:
          type: string
          enum:
          - new
          - in_process
          - closed
      - name: visitor_email
        required: false
        in: query
        description: visitor_email
        schema:
          type: string
      - name: visitor_email__icontains
        required: false
        in: query
        description: visitor_email__icontains
        schema:
          type: string
      - name: visitor_message__icontains
        required: false
        in: query
        description: visitor_message__icontains
        schema:
          type: string
      - name: visitor_name
        required: false
        in: query
        description: visitor_name
        schema:
          type: string
      - name: visitor_name__icontains
        required: false
        in: query
        description: visitor_name__icontains
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTicket'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    delete:
      operationId: api_help_tickets_destroy
      description: ''
      parameters:
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ticket.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ticket_status
        required: false
        in: query
        description: ticket_status
        schema:
          type: string
          enum:
          - new
          - in_process
          - closed
      - name: visitor_email
        required: false
        in: query
        description: visitor_email
        schema:
          type: string
      - name: visitor_email__icontains
        required: false
        in: query
        description: visitor_email__icontains
        schema:
          type: string
      - name: visitor_message__icontains
        required: false
        in: query
        description: visitor_message__icontains
        schema:
          type: string
      - name: visitor_name
        required: false
        in: query
        description: visitor_name
        schema:
          type: string
      - name: visitor_name__icontains
        required: false
        in: query
        description: visitor_name__icontains
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/insurance/incoming-invoices/:
    get:
      operationId: api_insurance_incoming_invoices_list
      description: ''
      parameters:
      - name: amount
        required: false
        in: query
        description: amount
        schema:
          type: string
      - name: amount__gt
        required: false
        in: query
        description: amount__gt
        schema:
          type: string
      - name: amount__lt
        required: false
        in: query
        description: amount__lt
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: insurance_case
        required: false
        in: query
        description: insurance_case
        schema:
          type: string
      - name: invoice_date
        required: false
        in: query
        description: invoice_date
        schema:
          type: string
      - name: invoice_date__gt
        required: false
        in: query
        description: invoice_date__gt
        schema:
          type: string
      - name: invoice_date__lt
        required: false
        in: query
        description: invoice_date__lt
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/IncomingInvoice'
          description: ''
    post:
      operationId: api_insurance_incoming_invoices_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomingInvoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncomingInvoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncomingInvoice'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingInvoice'
          description: ''
  /api/insurance/incoming-invoices/{id}/:
    get:
      operationId: api_insurance_incoming_invoices_retrieve
      description: ''
      parameters:
      - name: amount
        required: false
        in: query
        description: amount
        schema:
          type: string
      - name: amount__gt
        required: false
        in: query
        description: amount__gt
        schema:
          type: string
      - name: amount__lt
        required: false
        in: query
        description: amount__lt
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: insurance_case
        required: false
        in: query
        description: insurance_case
        schema:
          type: string
      - name: invoice_date
        required: false
        in: query
        description: invoice_date
        schema:
          type: string
      - name: invoice_date__gt
        required: false
        in: query
        description: invoice_date__gt
        schema:
          type: string
      - name: invoice_date__lt
        required: false
        in: query
        description: invoice_date__lt
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingInvoice'
          description: ''
    put:
      operationId: api_insurance_incoming_invoices_update
      description: ''
      parameters:
      - name: amount
        required: false
        in: query
        description: amount
        schema:
          type: string
      - name: amount__gt
        required: false
        in: query
        description: amount__gt
        schema:
          type: string
      - name: amount__lt
        required: false
        in: query
        description: amount__lt
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: insurance_case
        required: false
        in: query
        description: insurance_case
        schema:
          type: string
      - name: invoice_date
        required: false
        in: query
        description: invoice_date
        schema:
          type: string
      - name: invoice_date__gt
        required: false
        in: query
        description: invoice_date__gt
        schema:
          type: string
      - name: invoice_date__lt
        required: false
        in: query
        description: invoice_date__lt
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomingInvoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncomingInvoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncomingInvoice'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingInvoice'
          description: ''
    patch:
      operationId: api_insurance_incoming_invoices_partial_update
      description: ''
      parameters:
      - name: amount
        required: false
        in: query
        description: amount
        schema:
          type: string
      - name: amount__gt
        required: false
        in: query
        description: amount__gt
        schema:
          type: string
      - name: amount__lt
        required: false
        in: query
        description: amount__lt
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: insurance_case
        required: false
        in: query
        description: insurance_case
        schema:
          type: string
      - name: invoice_date
        required: false
        in: query
        description: invoice_date
        schema:
          type: string
      - name: invoice_date__gt
        required: false
        in: query
        description: invoice_date__gt
        schema:
          type: string
      - name: invoice_date__lt
        required: false
        in: query
        description: invoice_date__lt
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIncomingInvoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIncomingInvoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIncomingInvoice'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingInvoice'
          description: ''
    delete:
      operationId: api_insurance_incoming_invoices_destroy
      description: ''
      parameters:
      - name: amount
        required: false
        in: query
        description: amount
        schema:
          type: string
      - name: amount__gt
        required: false
        in: query
        description: amount__gt
        schema:
          type: string
      - name: amount__lt
        required: false
        in: query
        description: amount__lt
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: insurance_case
        required: false
        in: query
        description: insurance_case
        schema:
          type: string
      - name: invoice_date
        required: false
        in: query
        description: invoice_date
        schema:
          type: string
      - name: invoice_date__gt
        required: false
        in: query
        description: invoice_date__gt
        schema:
          type: string
      - name: invoice_date__lt
        required: false
        in: query
        description: invoice_date__lt
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/insurance/insurance-cases/:
    get:
      operationId: api_insurance_insurance_cases_list
      description: ''
      parameters:
      - name: claim_date
        required: false
        in: query
        description: claim_date
        schema:
          type: string
      - name: claim_date__gt
        required: false
        in: query
        description: claim_date__gt
        schema:
          type: string
      - name: claim_date__lt
        required: false
        in: query
        description: claim_date__lt
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: policy
        required: false
        in: query
        description: policy
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: service_provider
        required: false
        in: query
        description: service_provider
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - accept
          - process
          - reject
      - name: status__icontains
        required: false
        in: query
        description: status__icontains
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/InsuranceCase'
          description: ''
    post:
      operationId: api_insurance_insurance_cases_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceCase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InsuranceCase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InsuranceCase'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceCase'
          description: ''
  /api/insurance/insurance-cases/{id}/:
    get:
      operationId: api_insurance_insurance_cases_retrieve
      description: ''
      parameters:
      - name: claim_date
        required: false
        in: query
        description: claim_date
        schema:
          type: string
      - name: claim_date__gt
        required: false
        in: query
        description: claim_date__gt
        schema:
          type: string
      - name: claim_date__lt
        required: false
        in: query
        description: claim_date__lt
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: policy
        required: false
        in: query
        description: policy
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: service_provider
        required: false
        in: query
        description: service_provider
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - accept
          - process
          - reject
      - name: status__icontains
        required: false
        in: query
        description: status__icontains
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceCase'
          description: ''
    put:
      operationId: api_insurance_insurance_cases_update
      description: ''
      parameters:
      - name: claim_date
        required: false
        in: query
        description: claim_date
        schema:
          type: string
      - name: claim_date__gt
        required: false
        in: query
        description: claim_date__gt
        schema:
          type: string
      - name: claim_date__lt
        required: false
        in: query
        description: claim_date__lt
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: policy
        required: false
        in: query
        description: policy
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: service_provider
        required: false
        in: query
        description: service_provider
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - accept
          - process
          - reject
      - name: status__icontains
        required: false
        in: query
        description: status__icontains
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceCase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InsuranceCase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InsuranceCase'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceCase'
          description: ''
    patch:
      operationId: api_insurance_insurance_cases_partial_update
      description: ''
      parameters:
      - name: claim_date
        required: false
        in: query
        description: claim_date
        schema:
          type: string
      - name: claim_date__gt
        required: false
        in: query
        description: claim_date__gt
        schema:
          type: string
      - name: claim_date__lt
        required: false
        in: query
        description: claim_date__lt
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: policy
        required: false
        in: query
        description: policy
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: service_provider
        required: false
        in: query
        description: service_provider
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - accept
          - process
          - reject
      - name: status__icontains
        required: false
        in: query
        description: status__icontains
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInsuranceCase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInsuranceCase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInsuranceCase'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceCase'
          description: ''
    delete:
      operationId: api_insurance_insurance_cases_destroy
      description: ''
      parameters:
      - name: claim_date
        required: false
        in: query
        description: claim_date
        schema:
          type: string
      - name: claim_date__gt
        required: false
        in: query
        description: claim_date__gt
        schema:
          type: string
      - name: claim_date__lt
        required: false
        in: query
        description: claim_date__lt
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: policy
        required: false
        in: query
        description: policy
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: service_provider
        required: false
        in: query
        description: service_provider
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - accept
          - process
          - reject
      - name: status__icontains
        required: false
        in: query
        description: status__icontains
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/insurance/policies/:
    get:
      operationId: api_insurance_policies_list
      description: ''
      parameters:
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: deductible
        required: false
        in: query
        description: deductible
        schema:
          type: string
      - name: deductible__gt
        required: false
        in: query
        description: deductible__gt
        schema:
          type: string
      - name: deductible__lt
        required: false
        in: query
        description: deductible__lt
        schema:
          type: string
      - name: end_date
        required: false
        in: query
        description: end_date
        schema:
          type: string
      - name: end_date__gt
        required: false
        in: query
        description: end_date__gt
        schema:
          type: string
      - name: end_date__lt
        required: false
        in: query
        description: end_date__lt
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: pet
        required: false
        in: query
        description: pet
        schema:
          type: string
      - name: policy_number
        required: false
        in: query
        description: policy_number
        schema:
          type: string
      - name: price
        required: false
        in: query
        description: price
        schema:
          type: string
      - name: price__gt
        required: false
        in: query
        description: price__gt
        schema:
          type: string
      - name: price__lt
        required: false
        in: query
        description: price__lt
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: start_date
        required: false
        in: query
        description: start_date
        schema:
          type: string
      - name: start_date__gt
        required: false
        in: query
        description: start_date__gt
        schema:
          type: string
      - name: start_date__lt
        required: false
        in: query
        description: start_date__lt
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - valid
          - invalid
          - expired
      - name: status__icontains
        required: false
        in: query
        description: status__icontains
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Policy'
          description: ''
    post:
      operationId: api_insurance_policies_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Policy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Policy'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: ''
  /api/insurance/policies/{id}/:
    get:
      operationId: api_insurance_policies_retrieve
      description: ''
      parameters:
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: deductible
        required: false
        in: query
        description: deductible
        schema:
          type: string
      - name: deductible__gt
        required: false
        in: query
        description: deductible__gt
        schema:
          type: string
      - name: deductible__lt
        required: false
        in: query
        description: deductible__lt
        schema:
          type: string
      - name: end_date
        required: false
        in: query
        description: end_date
        schema:
          type: string
      - name: end_date__gt
        required: false
        in: query
        description: end_date__gt
        schema:
          type: string
      - name: end_date__lt
        required: false
        in: query
        description: end_date__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: pet
        required: false
        in: query
        description: pet
        schema:
          type: string
      - name: policy_number
        required: false
        in: query
        description: policy_number
        schema:
          type: string
      - name: price
        required: false
        in: query
        description: price
        schema:
          type: string
      - name: price__gt
        required: false
        in: query
        description: price__gt
        schema:
          type: string
      - name: price__lt
        required: false
        in: query
        description: price__lt
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: start_date
        required: false
        in: query
        description: start_date
        schema:
          type: string
      - name: start_date__gt
        required: false
        in: query
        description: start_date__gt
        schema:
          type: string
      - name: start_date__lt
        required: false
        in: query
        description: start_date__lt
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - valid
          - invalid
          - expired
      - name: status__icontains
        required: false
        in: query
        description: status__icontains
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: ''
    put:
      operationId: api_insurance_policies_update
      description: ''
      parameters:
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: deductible
        required: false
        in: query
        description: deductible
        schema:
          type: string
      - name: deductible__gt
        required: false
        in: query
        description: deductible__gt
        schema:
          type: string
      - name: deductible__lt
        required: false
        in: query
        description: deductible__lt
        schema:
          type: string
      - name: end_date
        required: false
        in: query
        description: end_date
        schema:
          type: string
      - name: end_date__gt
        required: false
        in: query
        description: end_date__gt
        schema:
          type: string
      - name: end_date__lt
        required: false
        in: query
        description: end_date__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: pet
        required: false
        in: query
        description: pet
        schema:
          type: string
      - name: policy_number
        required: false
        in: query
        description: policy_number
        schema:
          type: string
      - name: price
        required: false
        in: query
        description: price
        schema:
          type: string
      - name: price__gt
        required: false
        in: query
        description: price__gt
        schema:
          type: string
      - name: price__lt
        required: false
        in: query
        description: price__lt
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: start_date
        required: false
        in: query
        description: start_date
        schema:
          type: string
      - name: start_date__gt
        required: false
        in: query
        description: start_date__gt
        schema:
          type: string
      - name: start_date__lt
        required: false
        in: query
        description: start_date__lt
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - valid
          - invalid
          - expired
      - name: status__icontains
        required: false
        in: query
        description: status__icontains
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Policy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Policy'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: ''
    patch:
      operationId: api_insurance_policies_partial_update
      description: ''
      parameters:
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: deductible
        required: false
        in: query
        description: deductible
        schema:
          type: string
      - name: deductible__gt
        required: false
        in: query
        description: deductible__gt
        schema:
          type: string
      - name: deductible__lt
        required: false
        in: query
        description: deductible__lt
        schema:
          type: string
      - name: end_date
        required: false
        in: query
        description: end_date
        schema:
          type: string
      - name: end_date__gt
        required: false
        in: query
        description: end_date__gt
        schema:
          type: string
      - name: end_date__lt
        required: false
        in: query
        description: end_date__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: pet
        required: false
        in: query
        description: pet
        schema:
          type: string
      - name: policy_number
        required: false
        in: query
        description: policy_number
        schema:
          type: string
      - name: price
        required: false
        in: query
        description: price
        schema:
          type: string
      - name: price__gt
        required: false
        in: query
        description: price__gt
        schema:
          type: string
      - name: price__lt
        required: false
        in: query
        description: price__lt
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: start_date
        required: false
        in: query
        description: start_date
        schema:
          type: string
      - name: start_date__gt
        required: false
        in: query
        description: start_date__gt
        schema:
          type: string
      - name: start_date__lt
        required: false
        in: query
        description: start_date__lt
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - valid
          - invalid
          - expired
      - name: status__icontains
        required: false
        in: query
        description: status__icontains
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPolicy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPolicy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPolicy'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: ''
    delete:
      operationId: api_insurance_policies_destroy
      description: ''
      parameters:
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: deductible
        required: false
        in: query
        description: deductible
        schema:
          type: string
      - name: deductible__gt
        required: false
        in: query
        description: deductible__gt
        schema:
          type: string
      - name: deductible__lt
        required: false
        in: query
        description: deductible__lt
        schema:
          type: string
      - name: end_date
        required: false
        in: query
        description: end_date
        schema:
          type: string
      - name: end_date__gt
        required: false
        in: query
        description: end_date__gt
        schema:
          type: string
      - name: end_date__lt
        required: false
        in: query
        description: end_date__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: pet
        required: false
        in: query
        description: pet
        schema:
          type: string
      - name: policy_number
        required: false
        in: query
        description: policy_number
        schema:
          type: string
      - name: price
        required: false
        in: query
        description: price
        schema:
          type: string
      - name: price__gt
        required: false
        in: query
        description: price__gt
        schema:
          type: string
      - name: price__lt
        required: false
        in: query
        description: price__lt
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: start_date
        required: false
        in: query
        description: start_date
        schema:
          type: string
      - name: start_date__gt
        required: false
        in: query
        description: start_date__gt
        schema:
          type: string
      - name: start_date__lt
        required: false
        in: query
        description: start_date__lt
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - valid
          - invalid
          - expired
      - name: status__icontains
        required: false
        in: query
        description: status__icontains
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/insurance/service-providers/:
    get:
      operationId: api_insurance_service_providers_list
      description: ''
      parameters:
      - name: address
        required: false
        in: query
        description: address
        schema:
          type: string
      - name: address__icontains
        required: false
        in: query
        description: address__icontains
        schema:
          type: string
      - name: company_name
        required: false
        in: query
        description: company_name
        schema:
          type: string
      - name: company_name__icontains
        required: false
        in: query
        description: company_name__icontains
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: iban
        required: false
        in: query
        description: iban
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: registration_number
        required: false
        in: query
        description: registration_number
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServiceProvider'
          description: ''
    post:
      operationId: api_insurance_service_providers_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceProvider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceProvider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceProvider'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProvider'
          description: ''
  /api/insurance/service-providers/{id}/:
    get:
      operationId: api_insurance_service_providers_retrieve
      description: ''
      parameters:
      - name: address
        required: false
        in: query
        description: address
        schema:
          type: string
      - name: address__icontains
        required: false
        in: query
        description: address__icontains
        schema:
          type: string
      - name: company_name
        required: false
        in: query
        description: company_name
        schema:
          type: string
      - name: company_name__icontains
        required: false
        in: query
        description: company_name__icontains
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: iban
        required: false
        in: query
        description: iban
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this service provider.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: registration_number
        required: false
        in: query
        description: registration_number
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProvider'
          description: ''
    put:
      operationId: api_insurance_service_providers_update
      description: ''
      parameters:
      - name: address
        required: false
        in: query
        description: address
        schema:
          type: string
      - name: address__icontains
        required: false
        in: query
        description: address__icontains
        schema:
          type: string
      - name: company_name
        required: false
        in: query
        description: company_name
        schema:
          type: string
      - name: company_name__icontains
        required: false
        in: query
        description: company_name__icontains
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: iban
        required: false
        in: query
        description: iban
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this service provider.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: registration_number
        required: false
        in: query
        description: registration_number
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceProvider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceProvider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceProvider'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProvider'
          description: ''
    patch:
      operationId: api_insurance_service_providers_partial_update
      description: ''
      parameters:
      - name: address
        required: false
        in: query
        description: address
        schema:
          type: string
      - name: address__icontains
        required: false
        in: query
        description: address__icontains
        schema:
          type: string
      - name: company_name
        required: false
        in: query
        description: company_name
        schema:
          type: string
      - name: company_name__icontains
        required: false
        in: query
        description: company_name__icontains
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: iban
        required: false
        in: query
        description: iban
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this service provider.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: registration_number
        required: false
        in: query
        description: registration_number
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceProvider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceProvider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceProvider'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProvider'
          description: ''
    delete:
      operationId: api_insurance_service_providers_destroy
      description: ''
      parameters:
      - name: address
        required: false
        in: query
        description: address
        schema:
          type: string
      - name: address__icontains
        required: false
        in: query
        description: address__icontains
        schema:
          type: string
      - name: company_name
        required: false
        in: query
        description: company_name
        schema:
          type: string
      - name: company_name__icontains
        required: false
        in: query
        description: company_name__icontains
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: iban
        required: false
        in: query
        description: iban
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this service provider.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: registration_number
        required: false
        in: query
        description: registration_number
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/payment/:
    get:
      operationId: api_payment_list
      description: ''
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      type: object
                      additionalProperties: {}
                      description: Unspecified response body
          description: ''
    post:
      operationId: api_payment_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/payment/cancel_insurance/:
    post:
      operationId: api_payment_cancel_insurance_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/payment/checkout_confirm/:
    post:
      operationId: api_payment_checkout_confirm_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/payment/create_checkout/:
    post:
      operationId: api_payment_create_checkout_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/payment/{id}/:
    get:
      operationId: api_payment_retrieve
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
    put:
      operationId: api_payment_update
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
    patch:
      operationId: api_payment_partial_update
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
    delete:
      operationId: api_payment_destroy
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/pet-profile/breeds/:
    get:
      operationId: api_pet_profile_breeds_list
      description: ''
      parameters:
      - name: age_max
        required: false
        in: query
        description: age_max
        schema:
          type: string
      - name: age_max__gt
        required: false
        in: query
        description: age_max__gt
        schema:
          type: string
      - name: age_max__lt
        required: false
        in: query
        description: age_max__lt
        schema:
          type: string
      - name: age_min
        required: false
        in: query
        description: age_min
        schema:
          type: string
      - name: age_min__gt
        required: false
        in: query
        description: age_min__gt
        schema:
          type: string
      - name: age_min__lt
        required: false
        in: query
        description: age_min__lt
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: risk_level
        required: false
        in: query
        description: risk_level
        schema:
          type: string
      - name: risk_level__gt
        required: false
        in: query
        description: risk_level__gt
        schema:
          type: string
      - name: risk_level__lt
        required: false
        in: query
        description: risk_level__lt
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: species
        required: false
        in: query
        description: species
        schema:
          type: string
          enum:
          - cat
          - dog
      - name: species__icontains
        required: false
        in: query
        description: species__icontains
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      type: object
                      additionalProperties: {}
                      description: Unspecified response body
          description: ''
    post:
      operationId: api_pet_profile_breeds_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/pet-profile/breeds/{id}/:
    get:
      operationId: api_pet_profile_breeds_retrieve
      description: ''
      parameters:
      - name: age_max
        required: false
        in: query
        description: age_max
        schema:
          type: string
      - name: age_max__gt
        required: false
        in: query
        description: age_max__gt
        schema:
          type: string
      - name: age_max__lt
        required: false
        in: query
        description: age_max__lt
        schema:
          type: string
      - name: age_min
        required: false
        in: query
        description: age_min
        schema:
          type: string
      - name: age_min__gt
        required: false
        in: query
        description: age_min__gt
        schema:
          type: string
      - name: age_min__lt
        required: false
        in: query
        description: age_min__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this breed.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: risk_level
        required: false
        in: query
        description: risk_level
        schema:
          type: string
      - name: risk_level__gt
        required: false
        in: query
        description: risk_level__gt
        schema:
          type: string
      - name: risk_level__lt
        required: false
        in: query
        description: risk_level__lt
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: species
        required: false
        in: query
        description: species
        schema:
          type: string
          enum:
          - cat
          - dog
      - name: species__icontains
        required: false
        in: query
        description: species__icontains
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
    put:
      operationId: api_pet_profile_breeds_update
      description: ''
      parameters:
      - name: age_max
        required: false
        in: query
        description: age_max
        schema:
          type: string
      - name: age_max__gt
        required: false
        in: query
        description: age_max__gt
        schema:
          type: string
      - name: age_max__lt
        required: false
        in: query
        description: age_max__lt
        schema:
          type: string
      - name: age_min
        required: false
        in: query
        description: age_min
        schema:
          type: string
      - name: age_min__gt
        required: false
        in: query
        description: age_min__gt
        schema:
          type: string
      - name: age_min__lt
        required: false
        in: query
        description: age_min__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this breed.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: risk_level
        required: false
        in: query
        description: risk_level
        schema:
          type: string
      - name: risk_level__gt
        required: false
        in: query
        description: risk_level__gt
        schema:
          type: string
      - name: risk_level__lt
        required: false
        in: query
        description: risk_level__lt
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: species
        required: false
        in: query
        description: species
        schema:
          type: string
          enum:
          - cat
          - dog
      - name: species__icontains
        required: false
        in: query
        description: species__icontains
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
    patch:
      operationId: api_pet_profile_breeds_partial_update
      description: ''
      parameters:
      - name: age_max
        required: false
        in: query
        description: age_max
        schema:
          type: string
      - name: age_max__gt
        required: false
        in: query
        description: age_max__gt
        schema:
          type: string
      - name: age_max__lt
        required: false
        in: query
        description: age_max__lt
        schema:
          type: string
      - name: age_min
        required: false
        in: query
        description: age_min
        schema:
          type: string
      - name: age_min__gt
        required: false
        in: query
        description: age_min__gt
        schema:
          type: string
      - name: age_min__lt
        required: false
        in: query
        description: age_min__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this breed.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: risk_level
        required: false
        in: query
        description: risk_level
        schema:
          type: string
      - name: risk_level__gt
        required: false
        in: query
        description: risk_level__gt
        schema:
          type: string
      - name: risk_level__lt
        required: false
        in: query
        description: risk_level__lt
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: species
        required: false
        in: query
        description: species
        schema:
          type: string
          enum:
          - cat
          - dog
      - name: species__icontains
        required: false
        in: query
        description: species__icontains
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
    delete:
      operationId: api_pet_profile_breeds_destroy
      description: ''
      parameters:
      - name: age_max
        required: false
        in: query
        description: age_max
        schema:
          type: string
      - name: age_max__gt
        required: false
        in: query
        description: age_max__gt
        schema:
          type: string
      - name: age_max__lt
        required: false
        in: query
        description: age_max__lt
        schema:
          type: string
      - name: age_min
        required: false
        in: query
        description: age_min
        schema:
          type: string
      - name: age_min__gt
        required: false
        in: query
        description: age_min__gt
        schema:
          type: string
      - name: age_min__lt
        required: false
        in: query
        description: age_min__lt
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this breed.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: risk_level
        required: false
        in: query
        description: risk_level
        schema:
          type: string
      - name: risk_level__gt
        required: false
        in: query
        description: risk_level__gt
        schema:
          type: string
      - name: risk_level__lt
        required: false
        in: query
        description: risk_level__lt
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: species
        required: false
        in: query
        description: species
        schema:
          type: string
          enum:
          - cat
          - dog
      - name: species__icontains
        required: false
        in: query
        description: species__icontains
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/pet-profile/pets/:
    get:
      operationId: api_pet_profile_pets_list
      description: ''
      parameters:
      - name: age
        required: false
        in: query
        description: age
        schema:
          type: string
      - name: age__gt
        required: false
        in: query
        description: age__gt
        schema:
          type: string
      - name: age__lt
        required: false
        in: query
        description: age__lt
        schema:
          type: string
      - name: breed
        required: false
        in: query
        description: breed
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: gender
        required: false
        in: query
        description: gender
        schema:
          type: string
          enum:
          - M
          - F
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: species
        required: false
        in: query
        description: species
        schema:
          type: string
          enum:
          - cat
          - dog
      - name: species__icontains
        required: false
        in: query
        description: species__icontains
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pet'
          description: ''
    post:
      operationId: api_pet_profile_pets_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: ''
  /api/pet-profile/pets/create_new_account/:
    post:
      operationId: api_pet_profile_pets_create_new_account_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: ''
  /api/pet-profile/pets/{id}/:
    get:
      operationId: api_pet_profile_pets_retrieve
      description: ''
      parameters:
      - name: age
        required: false
        in: query
        description: age
        schema:
          type: string
      - name: age__gt
        required: false
        in: query
        description: age__gt
        schema:
          type: string
      - name: age__lt
        required: false
        in: query
        description: age__lt
        schema:
          type: string
      - name: breed
        required: false
        in: query
        description: breed
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: gender
        required: false
        in: query
        description: gender
        schema:
          type: string
          enum:
          - M
          - F
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: species
        required: false
        in: query
        description: species
        schema:
          type: string
          enum:
          - cat
          - dog
      - name: species__icontains
        required: false
        in: query
        description: species__icontains
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: ''
    put:
      operationId: api_pet_profile_pets_update
      description: ''
      parameters:
      - name: age
        required: false
        in: query
        description: age
        schema:
          type: string
      - name: age__gt
        required: false
        in: query
        description: age__gt
        schema:
          type: string
      - name: age__lt
        required: false
        in: query
        description: age__lt
        schema:
          type: string
      - name: breed
        required: false
        in: query
        description: breed
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: gender
        required: false
        in: query
        description: gender
        schema:
          type: string
          enum:
          - M
          - F
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: species
        required: false
        in: query
        description: species
        schema:
          type: string
          enum:
          - cat
          - dog
      - name: species__icontains
        required: false
        in: query
        description: species__icontains
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: ''
    patch:
      operationId: api_pet_profile_pets_partial_update
      description: ''
      parameters:
      - name: age
        required: false
        in: query
        description: age
        schema:
          type: string
      - name: age__gt
        required: false
        in: query
        description: age__gt
        schema:
          type: string
      - name: age__lt
        required: false
        in: query
        description: age__lt
        schema:
          type: string
      - name: breed
        required: false
        in: query
        description: breed
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: gender
        required: false
        in: query
        description: gender
        schema:
          type: string
          enum:
          - M
          - F
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: species
        required: false
        in: query
        description: species
        schema:
          type: string
          enum:
          - cat
          - dog
      - name: species__icontains
        required: false
        in: query
        description: species__icontains
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPet'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: ''
    delete:
      operationId: api_pet_profile_pets_destroy
      description: ''
      parameters:
      - name: age
        required: false
        in: query
        description: age
        schema:
          type: string
      - name: age__gt
        required: false
        in: query
        description: age__gt
        schema:
          type: string
      - name: age__lt
        required: false
        in: query
        description: age__lt
        schema:
          type: string
      - name: breed
        required: false
        in: query
        description: breed
        schema:
          type: string
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: gender
        required: false
        in: query
        description: gender
        schema:
          type: string
          enum:
          - M
          - F
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: species
        required: false
        in: query
        description: species
        schema:
          type: string
          enum:
          - cat
          - dog
      - name: species__icontains
        required: false
        in: query
        description: species__icontains
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/roles/:
    get:
      operationId: api_roles_list
      description: ''
      parameters:
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
          description: ''
    post:
      operationId: api_roles_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /api/roles/{id}/:
    get:
      operationId: api_roles_retrieve
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this role.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    put:
      operationId: api_roles_update
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this role.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    patch:
      operationId: api_roles_partial_update
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this role.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRole'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    delete:
      operationId: api_roles_destroy
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this role.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: api_users_list
      description: ''
      parameters:
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: role
        required: false
        in: query
        description: role
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      type: object
                      additionalProperties: {}
                      description: Unspecified response body
          description: ''
    post:
      operationId: api_users_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/users/change_password/:
    post:
      operationId: api_users_change_password_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/users/me/:
    get:
      operationId: api_users_me_retrieve
      description: ''
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/users/reset_password/:
    post:
      operationId: api_users_reset_password_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/users/reset_password_confirm/:
    post:
      operationId: api_users_reset_password_confirm_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/users/verify_email/:
    post:
      operationId: api_users_verify_email_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      description: ''
      parameters:
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: role
        required: false
        in: query
        description: role
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
    put:
      operationId: api_users_update
      description: ''
      parameters:
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: role
        required: false
        in: query
        description: role
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
    patch:
      operationId: api_users_partial_update
      description: ''
      parameters:
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: role
        required: false
        in: query
        description: role
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
    delete:
      operationId: api_users_destroy
      description: ''
      parameters:
      - name: created_at
        required: false
        in: query
        description: created_at
        schema:
          type: string
      - name: created_at__gt
        required: false
        in: query
        description: created_at__gt
        schema:
          type: string
      - name: created_at__lt
        required: false
        in: query
        description: created_at__lt
        schema:
          type: string
      - name: created_at__year__exact
        required: false
        in: query
        description: created_at__year__exact
        schema:
          type: string
      - name: created_at__year__gt
        required: false
        in: query
        description: created_at__year__gt
        schema:
          type: string
      - name: created_at__year__lt
        required: false
        in: query
        description: created_at__year__lt
        schema:
          type: string
      - name: email
        required: false
        in: query
        description: email
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__icontains
        required: false
        in: query
        description: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: role
        required: false
        in: query
        description: role
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
components:
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: Bearer
  schemas:
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    Ticket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        visitor_name:
          type: string
          maxLength: 125
        visitor_email:
          type: string
          format: email
          maxLength: 254
        visitor_message:
          type: string
          maxLength: 1000
        ticket_status:
          $ref: '#/components/schemas/TicketStatusEnum'
      required:
      - visitor_name
      - visitor_email
      - visitor_message
    PatchedTicket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        visitor_name:
          type: string
          maxLength: 125
        visitor_email:
          type: string
          format: email
          maxLength: 254
        visitor_message:
          type: string
          maxLength: 1000
        ticket_status:
          $ref: '#/components/schemas/TicketStatusEnum'
    IncomingInvoice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        invoice_date:
          type: string
          format: date
        amount:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 1000000
          minimum: -1000000
        insurance_case:
          type: string
      required:
      - invoice_date
      - amount
      - insurance_case
    PatchedIncomingInvoice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        invoice_date:
          type: string
          format: date
        amount:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 1000000
          minimum: -1000000
        insurance_case:
          type: string
    InsuranceCase:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        claim_date:
          type: string
          format: date
        description:
          type: string
        status:
          enum:
          - accept
          - process
          - reject
          type: string
        policy:
          type: string
        service_provider:
          type: string
          nullable: true
      required:
      - claim_date
      - description
      - policy
    PatchedInsuranceCase:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        claim_date:
          type: string
          format: date
        description:
          type: string
        status:
          enum:
          - accept
          - process
          - reject
          type: string
        policy:
          type: string
        service_provider:
          type: string
          nullable: true
    Policy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        policy_number:
          type: string
          maxLength: 255
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          enum:
          - valid
          - invalid
          - expired
          type: string
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 1000000
          minimum: -1000000
        initial_limit:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 1000000
          minimum: -1000000
        current_limit:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 1000000
          minimum: -1000000
        deductible:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 10000
          minimum: -10000
        pet:
          type: string
          nullable: true
      required:
      - policy_number
      - start_date
      - end_date
      - status
      - initial_limit
      - current_limit
      - deductible
    PatchedPolicy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        policy_number:
          type: string
          maxLength: 255
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          enum:
          - valid
          - invalid
          - expired
          type: string
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 1000000
          minimum: -1000000
        initial_limit:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 1000000
          minimum: -1000000
        current_limit:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 1000000
          minimum: -1000000
        deductible:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 10000
          minimum: -10000
        pet:
          type: string
          nullable: true
    ServiceProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        company_name:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 15
        registration_number:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        iban:
          type: string
          maxLength: 34
      required:
      - company_name
      - phone
      - registration_number
      - address
      - iban
    PatchedServiceProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        company_name:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 15
        registration_number:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        iban:
          type: string
          maxLength: 34
    Pet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        policy:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 200
        age:
          type: integer
          maximum: 20
          minimum: 1
        gender:
          $ref: '#/components/schemas/GenderEnum'
        species:
          $ref: '#/components/schemas/SpeciesEnum'
        breed:
          type: string
        user:
          type: string
      required:
      - name
      - age
      - gender
      - species
      - breed
      - user
    PatchedPet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        policy:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 200
        age:
          type: integer
          maximum: 20
          minimum: 1
        gender:
          $ref: '#/components/schemas/GenderEnum'
        species:
          $ref: '#/components/schemas/SpeciesEnum'
        breed:
          type: string
        user:
          type: string
    Role:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
      required:
      - name
    PatchedRole:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
    TicketStatusEnum:
      enum:
      - new
      - in_process
      - closed
      type: string
    GenderEnum:
      enum:
      - M
      - F
      type: string
    SpeciesEnum:
      enum:
      - cat
      - dog
      type: string
